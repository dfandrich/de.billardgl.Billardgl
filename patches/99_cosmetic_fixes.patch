Author: Thierry Reding <thierry@doppeltgemoppelt.de>
Description: Fixes a couple of compiler warnings.
Updated: 6/20/2013 - Barry deFreese <bdefreese@debian.org>.
         Fixed several warnings on string conversions and missing parens.
Index: billard-gl-1.75/src/BillardGL.cpp
===================================================================
--- billard-gl-1.75.orig/src/BillardGL.cpp	2013-06-19 18:36:57.000000000 -0400
+++ billard-gl-1.75/src/BillardGL.cpp	2013-06-20 04:35:45.000000000 -0400
@@ -35,8 +35,6 @@
 
 #include "BillardGL.h"
 
-#pragma comment(linker, "/subsystem:\"windows\" /entry:\"mainCRTStartup\"")
-
 //Tabellen
 GLfloat Bewegungstabelle[2000][16][3];
 GLint   Soundtabelle[1000];
Index: billard-gl-1.75/src/bmp.cpp
===================================================================
--- billard-gl-1.75.orig/src/bmp.cpp	2013-06-19 18:36:57.000000000 -0400
+++ billard-gl-1.75/src/bmp.cpp	2013-06-20 04:35:45.000000000 -0400
@@ -4,14 +4,16 @@
 // Modified by Volker Blanz, 25.4.2001
 //
 
-#include <iostream.h>
-#include <fstream.h>
+#include <iostream>
+#include <fstream>
 #include <stdio.h>
 #include <string.h>
 #include "LA.h"
 #include "Namen.h"
 #include "bmp.h"
 
+using namespace std;
+
 // from ioutil:
 
 WORDX readWord(FILE *f) {
Index: billard-gl-1.75/src/Kugel.cpp
===================================================================
--- billard-gl-1.75.orig/src/Kugel.cpp	2013-06-19 18:36:57.000000000 -0400
+++ billard-gl-1.75/src/Kugel.cpp	2013-06-20 05:21:02.000000000 -0400
@@ -123,7 +123,7 @@
         glBindTexture(GL_TEXTURE_2D,Texturen[TG]);
 	sprintf(Name,"Texturen/%i/%i.bmp",TG,Nr); 
 	loadBMP(tex_r,tex_g,tex_b,Name);
-	GLfloat *texcoord;
+	GLfloat *texcoord = NULL;
 	if (tex_r.nrh!=tex_r.nch) {
 	  GLfloat Aspekt=(tex_r.nch+1.0)/(tex_r.nrh+1.0);
 	  texcoord = (GLfloat*) malloc (20*(Aufloesung+1)*(Aufloesung+2)*sizeof(GLfloat));
@@ -419,17 +419,17 @@
 }
 
 void Kugel::neuePositionCM(GLfloat neuPos[]) {
-  GLfloat Pos[]={neuPos[0]/2.8575,neuPos[1]/2.8575,neuPos[2]/2.8575};
+  GLfloat Pos[]={static_cast<GLfloat>(neuPos[0]/2.8575),static_cast<GLfloat>(neuPos[1]/2.8575),static_cast<GLfloat>(neuPos[2]/2.8575)};
   neuePosition(Pos);
 }
 
 void Kugel::neuePositionCM(GLfloat neuPos_x,GLfloat neuPos_y,GLfloat neuPos_z) {
-  GLfloat Pos[]={neuPos_x/2.8575,neuPos_y/2.8575,neuPos_z/2.8575};
+  GLfloat Pos[]={static_cast<GLfloat>(neuPos_x/2.8575),static_cast<GLfloat>(neuPos_y/2.8575),static_cast<GLfloat>(neuPos_z/2.8575)};
   neuePosition(Pos);
 }
 
 void Kugel::neuePositionCM(GLfloat neuPos_x,GLfloat neuPos_y) {
-  GLfloat Pos[]={neuPos_x/2.8575,neuPos_y/2.8575,0.0};
+  GLfloat Pos[]={static_cast<GLfloat>(neuPos_x/2.8575),static_cast<GLfloat>(neuPos_y/2.8575),0.0};
   neuePosition(Pos);
 }
 
@@ -449,17 +449,17 @@
 }
 
 void Kugel::neuePositionINCH(GLfloat neuPos[]) {
-  GLfloat Pos[]={neuPos[0]/1.125,neuPos[1]/1.125,neuPos[2]/1.125};
+  GLfloat Pos[]={static_cast<GLfloat>(neuPos[0]/1.125),static_cast<GLfloat>(neuPos[1]/1.125),static_cast<GLfloat>(neuPos[2]/1.125)};
   neuePosition(Pos);
 }
 
 void Kugel::neuePositionINCH(GLfloat neuPos_x,GLfloat neuPos_y,GLfloat neuPos_z) {
-  GLfloat Pos[]={neuPos_x/1.125,neuPos_y/1.125,neuPos_z/1.125};
+  GLfloat Pos[]={static_cast<GLfloat>(neuPos_x/1.125),static_cast<GLfloat>(neuPos_y/1.125),static_cast<GLfloat>(neuPos_z/1.125)};
   neuePosition(Pos);
 }
 
 void Kugel::neuePositionINCH(GLfloat neuPos_x,GLfloat neuPos_y) {
-  GLfloat Pos[]={neuPos_x/1.125,neuPos_y/1.125,0.0};
+  GLfloat Pos[]={static_cast<GLfloat>(neuPos_x/1.125),static_cast<GLfloat>(neuPos_y/1.125),0.0};
   neuePosition(Pos);
 }
 
Index: billard-gl-1.75/src/Textfeld.cpp
===================================================================
--- billard-gl-1.75.orig/src/Textfeld.cpp	2002-04-23 12:08:13.000000000 -0400
+++ billard-gl-1.75/src/Textfeld.cpp	2013-06-20 06:30:40.000000000 -0400
@@ -168,12 +168,12 @@
   Horchen=0;
 }  
 
-void Textfeld::Initialisiere(GLint DLA, char TextZ[]){
+void Textfeld::Initialisiere(GLint DLA, const char TextZ[]){
   Initialisiere(DLA);
   SetzeText(TextZ);
 }
 
-void Textfeld::InitialisiereKDL(GLint DLA, char TextZ[]){
+void Textfeld::InitialisiereKDL(GLint DLA, const char TextZ[]){
   Initialisiere(DLA);
   SetzeTextKDL(TextZ);
 }
@@ -245,7 +245,7 @@
 }
 
 
-void Textfeld::SetzeText(char TextZ[]){
+void Textfeld::SetzeText(const char TextZ[]){
   int i=0;
   while (TextZ[i] && i<1999) {
     Zeichenkette[i]=TextZ[i];
@@ -255,7 +255,7 @@
   GeneriereDisplayList();
 }
 
-void Textfeld::SetzeTextKDL(char TextZ[]){
+void Textfeld::SetzeTextKDL(const char TextZ[]){
   int i=0;
   while (TextZ[i] && i<1999) {
     Zeichenkette[i]=TextZ[i];
Index: billard-gl-1.75/src/Textfeld.h
===================================================================
--- billard-gl-1.75.orig/src/Textfeld.h	2002-04-23 12:10:50.000000000 -0400
+++ billard-gl-1.75/src/Textfeld.h	2013-06-20 06:28:31.000000000 -0400
@@ -3,13 +3,13 @@
   Textfeld();
   GLint dummyInitialisiere(GLint);
   void Initialisiere(GLint);
-  void Initialisiere(GLint,char[]);
-  void InitialisiereKDL(GLint,char[]);
+  void Initialisiere(GLint,const char[]);
+  void InitialisiereKDL(GLint,const char[]);
   void male();
   void Positioniere(GLfloat,GLfloat,GLfloat,GLint);
   void PositioniereFix(GLfloat,GLfloat,GLfloat,GLint);
-  void SetzeText(char[]);
-  void SetzeTextKDL(char[]);
+  void SetzeText(const char[]);
+  void SetzeTextKDL(const char[]);
   GLint Zeichen(char);
   char* Text();
 
Index: billard-gl-1.75/src/Schild.h
===================================================================
--- billard-gl-1.75.orig/src/Schild.h	2002-04-23 12:10:11.000000000 -0400
+++ billard-gl-1.75/src/Schild.h	2013-06-20 06:39:37.000000000 -0400
@@ -4,10 +4,10 @@
   Schild();
   void Initialisiere();
   void InitialisiereLogo();
-  void Initialisiere(GLint,char[]);
-  void InitialisiereBuchstabe(GLint,char[]);
-  void Initialisiere(GLint,char[],char);
-  void Initialisiere(GLint,char[],char[]);
+  void Initialisiere(GLint,const char[]);
+  void InitialisiereBuchstabe(GLint,const char[]);
+  void Initialisiere(GLint,const char[],char);
+  void Initialisiere(GLint,const char[],const char[]);
   void male();
   void Positioniere(GLfloat,GLfloat,GLfloat,GLfloat);
   void PositioniereFix(GLfloat,GLfloat,GLfloat,GLfloat);
Index: billard-gl-1.75/src/Schild.cpp
===================================================================
--- billard-gl-1.75.orig/src/Schild.cpp	2002-04-23 12:09:55.000000000 -0400
+++ billard-gl-1.75/src/Schild.cpp	2013-06-20 07:05:24.000000000 -0400
@@ -31,8 +31,8 @@
 }
 
 void Schild::Initialisiere(GLint TexGr,
-			   char Name[],
-			   char AlphaName[]){
+			   const char Name[],
+			   const char AlphaName[]){
   FMatrix texr,texg,texb,texa;     // Matrix-Bilder, in die die Textur kommt
   if (!SchildIndex) {
     SchildIndex=glGenLists(1);
@@ -80,7 +80,7 @@
 }
 
 void Schild::Initialisiere(GLint TexGr,
-			   char Name[]){
+			   const char Name[]){
   FMatrix texr,texg,texb;     // Matrix-Bilder, in die die Textur kommt
   if (!SchildIndex) {
     SchildIndex=glGenLists(1);
@@ -155,7 +155,7 @@
 }
 
 void Schild::InitialisiereBuchstabe(GLint TexGr,
-			   char Name[]){
+			   const char Name[]){
   FMatrix texr,texg,texb;     // Matrix-Bilder, in die die Textur kommt
   if (!SchildIndex) {
     SchildIndex=glGenLists(1);
@@ -199,7 +199,7 @@
 }
 
 void Schild::Initialisiere(GLint TexGr,
-			   char Name[],
+			   const char Name[],
 			   char Land){
   Land='c';
   FMatrix texr,texg,texb;     // Matrix-Bilder, in die die Textur kommt
Index: billard-gl-1.75/src/Schiedsrichter.cpp
===================================================================
--- billard-gl-1.75.orig/src/Schiedsrichter.cpp	2002-04-22 06:40:54.000000000 -0400
+++ billard-gl-1.75/src/Schiedsrichter.cpp	2013-06-20 07:04:45.000000000 -0400
@@ -115,8 +115,8 @@
   KugelnAnBande[Kugel]=JA;
   
   if (!ErsteBeruehrteKugel && ((Bande==20) ||
-			      (Bande==21) && (Kugelx<-63.5) ||
-			      (Bande==23) && (Kugelx<-63.5))) {
+			      ((Bande==21) && (Kugelx<-63.5)) ||
+			      ((Bande==23) && (Kugelx<-63.5)))) {
       BandeAusserhalbKopffeldvorKugelBeruehrt = JA;
   }
 }
@@ -236,17 +236,17 @@
 	  ErsteVersenkteKugel &&
 	  ErsteBeruehrteKugel != 8 &&
 	  ErsteVersenkteKugel != 8) {
-	if ((SpielerAmStoss == SPIELER1) &&
-	    (ErsteVersenkteKugel < 8) ||
-	    (SpielerAmStoss == SPIELER2) &&
-	    (ErsteVersenkteKugel > 8)) {
+	if (((SpielerAmStoss == SPIELER1) &&
+	    (ErsteVersenkteKugel < 8)) ||
+	    ((SpielerAmStoss == SPIELER2) &&
+	    (ErsteVersenkteKugel > 8))) {
 	  GruppenVerteilung = S1_GANZE_S2_HALBE;
 	  //printf("Gruppenverteilung:  S1_GANZE_S2_HALBE\n");
 	}
-	if ((SpielerAmStoss == SPIELER1) &&
-	    (ErsteVersenkteKugel > 8) ||
-	    (SpielerAmStoss == SPIELER2) &&
-	    (ErsteVersenkteKugel < 8)) {
+	if (((SpielerAmStoss == SPIELER1) &&
+	    (ErsteVersenkteKugel > 8)) ||
+	    ((SpielerAmStoss == SPIELER2) &&
+	    (ErsteVersenkteKugel < 8))) {
 	  GruppenVerteilung = S1_HALBE_S2_GANZE;
 	  //printf("Gruppenverteilung:  S1_HALBE_S2_GANZE\n");
 	}      
@@ -274,10 +274,10 @@
 	}
       }
 
-      if ((SpielerAmStoss==SPIELER1) &&
-	  (FoulsHintereinanderSpieler1 == 3) ||
-	  (SpielerAmStoss==SPIELER2) &&
-	  (FoulsHintereinanderSpieler2 == 3)) {
+      if (((SpielerAmStoss==SPIELER1) &&
+	  (FoulsHintereinanderSpieler1 == 3)) ||
+	  ((SpielerAmStoss==SPIELER2) &&
+	  (FoulsHintereinanderSpieler2 == 3))) {
 	Verloren = JA;
 	//printf("Verloren durch drei Fouls hintereinander\n");
       }
@@ -485,7 +485,7 @@
 
 GLint Schiedsrichter::FarbigeKugel(GLint Kugel){
   if (Spiel==ACHTBALL) {
-    if (0<Kugel && Kugel<8 || 8<Kugel && Kugel<16) {
+    if ((0<Kugel && Kugel<8) || (8<Kugel && Kugel<16)) {
       return JA;
     }
    }
Index: billard-gl-1.75/src/SpielfeldAufbau.cpp
===================================================================
--- billard-gl-1.75.orig/src/SpielfeldAufbau.cpp	2002-04-22 06:43:39.000000000 -0400
+++ billard-gl-1.75/src/SpielfeldAufbau.cpp	2013-06-20 07:12:58.000000000 -0400
@@ -78,7 +78,7 @@
 	    }
 	  }
 	}
-      } while ((nummer[1]<8)&&(nummer[15]<8)||(nummer[1]>8)&&(nummer[15]>8));
+      } while (((nummer[1]<8)&&(nummer[15]<8))||((nummer[1]>8)&&(nummer[15]>8)));
       
       Kugel[nummer[0]].neuePositionCM(-63.5,0.0);
       Kugel[nummer[1]].neuePositionCM(63.5+12*asw3+random(Epsilon),-2.0*a+random(Epsilon));
